/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as StoriesIndexImport } from './routes/stories/index'
import { Route as MessagesIndexImport } from './routes/messages/index'
import { Route as GroupsIndexImport } from './routes/groups/index'
import { Route as AnalyticsIndexImport } from './routes/analytics/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StoriesIndexRoute = StoriesIndexImport.update({
  id: '/stories/',
  path: '/stories/',
  getParentRoute: () => rootRoute,
} as any)

const MessagesIndexRoute = MessagesIndexImport.update({
  id: '/messages/',
  path: '/messages/',
  getParentRoute: () => rootRoute,
} as any)

const GroupsIndexRoute = GroupsIndexImport.update({
  id: '/groups/',
  path: '/groups/',
  getParentRoute: () => rootRoute,
} as any)

const AnalyticsIndexRoute = AnalyticsIndexImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/analytics/': {
      id: '/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/groups/': {
      id: '/groups/'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof GroupsIndexImport
      parentRoute: typeof rootRoute
    }
    '/messages/': {
      id: '/messages/'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesIndexImport
      parentRoute: typeof rootRoute
    }
    '/stories/': {
      id: '/stories/'
      path: '/stories'
      fullPath: '/stories'
      preLoaderRoute: typeof StoriesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/groups': typeof GroupsIndexRoute
  '/messages': typeof MessagesIndexRoute
  '/stories': typeof StoriesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/groups': typeof GroupsIndexRoute
  '/messages': typeof MessagesIndexRoute
  '/stories': typeof StoriesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/analytics/': typeof AnalyticsIndexRoute
  '/groups/': typeof GroupsIndexRoute
  '/messages/': typeof MessagesIndexRoute
  '/stories/': typeof StoriesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/analytics' | '/groups' | '/messages' | '/stories'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/analytics' | '/groups' | '/messages' | '/stories'
  id: '__root__' | '/' | '/analytics/' | '/groups/' | '/messages/' | '/stories/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsIndexRoute: typeof AnalyticsIndexRoute
  GroupsIndexRoute: typeof GroupsIndexRoute
  MessagesIndexRoute: typeof MessagesIndexRoute
  StoriesIndexRoute: typeof StoriesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsIndexRoute: AnalyticsIndexRoute,
  GroupsIndexRoute: GroupsIndexRoute,
  MessagesIndexRoute: MessagesIndexRoute,
  StoriesIndexRoute: StoriesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analytics/",
        "/groups/",
        "/messages/",
        "/stories/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/analytics/": {
      "filePath": "analytics/index.tsx"
    },
    "/groups/": {
      "filePath": "groups/index.tsx"
    },
    "/messages/": {
      "filePath": "messages/index.tsx"
    },
    "/stories/": {
      "filePath": "stories/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
